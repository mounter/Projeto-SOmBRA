#
# Este Build System e baseado no do projeto 'Initium'
# criado pelo Gil Mendes (gil0mendes).
#
# O codigo original pode ser encontrado aqui:
# https://github.com/gil0mendes/Initium
#
# Este sistema usa o SCons que e desenvolvido em
# Python de forma a facilitar a manutencao e de
# forma facil extender a ferramenta com novas
# funcionalidades.
#

import os

class ConfigDict(dict):
    def __init__(self, *args, **kwargs):
        dict.__init__(self, *args, **kwargs)

    # Get a configuration value. This returns None for any accesses to
    # undefined keys.
    def __getitem__(self, key):
        try:
            return dict.__getitem__(self, key)
        except KeyError:
            return None

def load_file(path, var):
    vars = {}
    execfile(path, vars, vars)
    return vars[var]

# Build a list of known configurations.
configs = {}
entries = Glob('*.def')
for entry in entries:
    config = load_file(entry.name, 'config')

    def load_includes(curr):
        if not curr.has_key('includes'):
            return
        for include in curr['includes']:
            included = load_file('%s.inc' % (include), 'include')
            a = included['config'].items() if included.has_key('config') else []
            b = config['config'].items() if config.has_key('config') else []
            config['config'] = dict(a + b)
            load_includes(included)

    load_includes(config)
    config['config'] = ConfigDict(config['config'])

    name, ext = os.path.splitext(entry.name)
    configs[name] = config

Return('configs')
