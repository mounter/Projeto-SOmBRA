Import('config', 'defaults', 'env')

# Generate the configuration header.
f = open('config.h', 'w')
f.write('/* This file is automatically-generated, do not edit. */\n\n')
for (k, v) in config.items():
    if isinstance(v, str):
        f.write("#define CONFIG_%s \"%s\"\n" % (k, v))
    elif isinstance(v, bool):
        if v:
            f.write("#define CONFIG_%s 1\n" % (k))
    elif isinstance(v, int):
        f.write("#define CONFIG_%s %d\n" % (k, int(v)))
    else:
        raise Exception, "Unsupported type %s in config" % (type(v))
f.close()

# We place the final output binaries in a single directory.
env['OUTDIR'] = Dir('bin')

##########
# Kernel #
##########

SConscript(dirs = ['kernel'], exports = ['config', 'defaults', 'env'])
